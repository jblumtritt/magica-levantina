xquery version "3.0";

module namespace app="http://papyri.uni-koeln.de:8080/exist/apps/magica-levantina/templates";

declare namespace file="http://exist-db.org/xquery/file";

import module namespace templates="http://exist-db.org/xquery/templates";
import module namespace config="http://papyri.uni-koeln.de:8080/exist/apps/magica-levantina/config" at "config.xqm";
import module namespace auth="http://papyri.uni-koeln.de:8080/papyri/auth" at "auth.xqm";
import module namespace error="http://papyri.uni-koeln.de:8080/papyri/error" at "error.xqm";
import module namespace helpers="http://papyri.uni-koeln.de:8080/exist/apps/magica-levantina/helpers" at "helpers.xqm";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with a class attribute: class='app:test'. The function
 : has to take exactly 3 parameters.
 : 
 : @param $node the HTML node with the class attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 :)
declare function app:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="app:test"</code>.</p>
};


(: Input Form for a new object metadata entry :)
declare function app:input-form($node as node(), $model as map(*)){
if (auth:logged-in())
then
    (<p><span class="btn" onclick="$('#InputFormWrap').fadeIn();">New entry</span></p>,
    <div id="InputFormWrap" style="display: none;">
        <h2>New entry</h2>
        <form method="post" action="{$helpers:app-root}/descriptions.html" name="InputForm">
            <table>
                <tr>
                    <td class="label">Collection:</td>
                    <td><input name="collection" type="text" /></td>
                </tr>
                <tr>
                    <td class="label">Catalogue / Accession number:</td>
                    <td><input name="catalogue-no" type="text" /></td>
                </tr>
                <tr>
                    <td class="label">Object type:</td>
                    <td><input name="object-type" type="text" /></td>
                </tr>
                <tr>
                    <td class="label">Material:</td>
                    <td><input name="material" type="text" /></td>
                </tr>
                <tr>
                    <td class="label">Dimensions (cm):</td>
                    <td></td>
                </tr>
                <tr>
                    <td><span class="label sub">Width:</span></td>
                    <td><input name="dim-width" type="text" /></td>
                </tr>
                <tr>
                    <td class="label sub">Height:</td>
                    <td><input name="dim-height" type="text" /></td>
                </tr>
                <tr>
                    <td><span class="label sub">Depth:</span></td>
                    <td><input name="dim-depth" type="text" /></td>
                </tr>
                <tr>
                    <td class="label">RTI capture:</td>
                    <td><input name="rti-capture" type="radio" value="yes" /> yes <input name="rti-capture" type="radio" value="no" style="margin-left: 2em;" /> no <input name="rti-capture" type="radio" value="n/a" style="margin-left: 2em;" /> n/a</td>
                </tr>
                <tr>
                    <td class="label">RTI processing:</td>
                    <td><input name="rti-processing" type="radio" value="yes" /> yes <input name="rti-processing" type="radio" value="no" style="margin-left: 2em;" /> no <input name="rti-processing" type="radio" value="n/a" style="margin-left: 2em;" /> n/a</td>
                </tr>
                <tr>
                    <td class="label">Publication Status:</td>
                    <td><input name="publication-status" type="checkbox" value="published" /> published</td>
                </tr>
                <tr>
                    <td class="label">Comment:</td>
                    <td><input name="comment" type="text" /></td>
                </tr>
                <tr>
                    <td class="label">Bibliography:</td>
                    <td><input name="bibliography" type="text" /></td>
                </tr>
                <tr>
                    <td class="label">Files:</td>
                    <td></td>
                </tr>
                <tr>
                    <td><span class="label sub">PTM:</span></td>
                    <td>
                        <select name="files-ptm">
                            <option></option>
                            {system:as-user($config:admin-id, $config:admin-pass,
                            for $file in file:directory-list(concat($helpers:file-path, "/x_ptm_rti"), "*.ptm")//file:file
                             let $name := $file/data(@name)
                             return <option>{$name}</option>
                            )}
                        </select>
                    </td>
                </tr>
                <tr>
                    <td><span class="label sub">RTI:</span></td>
                    <td>
                        <select name="files-rti">
                            <option></option>
                            {system:as-user($config:admin-id, $config:admin-pass,
                            for $file in file:directory-list(concat($helpers:file-path, "/x_ptm_rti"), "*.rti")//file:file
                             let $name := $file/data(@name)
                             return <option>{$name}</option>
                            )}
                        </select>
                    </td>
                </tr>
                <tr>
                    <td><span class="label sub">Foto:</span></td>
                    <td>
                        <select name="files-foto">
                            <option></option>
                            {system:as-user($config:admin-id, $config:admin-pass,
                            for $file in file:directory-list(concat($helpers:file-path, "/x_fotos"), "*")//file:file
                             let $name := $file/data(@name)
                             return <option>{$name}</option>
                            )}
                        </select>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td><input type="hidden" name="form-type" value="object-metadata"/>
                    <input type="submit" value="Save" style="float: right;" class="btn" />
                    <input type="reset" value="Reset" style="float: right; margin-right: 10px; margin-left: 0.75em;" class="btn" />
                    <a class="btn" style="float: right; display: inline-block;" href="{$helpers:request-path}">Cancel</a>
                    </td>
                </tr>
            </table>
        </form>
    </div>)
  else ()
};


(: process the results of the object metadata input form :)
declare function app:proc-results($node as node(), $model as map(*)){
if (auth:logged-in())
then
 let $form-type := request:get-parameter("form-type", ())
 let $edit := request:get-parameter("edit", ())
 let $del := request:get-parameter("del", ())
 let $id := request:get-parameter("id", ())
 return
    if ($form-type = "object-metadata" and not($id))
    then 
        (: neuen Eintrag anlegen :)
        let $id := if (doc("/db/apps/magica-levantina/data/collection.xml")//object) 
                   then max(doc("/db/apps/magica-levantina/data/collection.xml")//object/@id) + 1
                   else 1
        return app:save($node, $model, $id) 
    else if (exists($edit))
         then 
            (: bearbeiteten Eintrag speichern :)
            if (exists($id))
            then app:save($node, $model, $id)
            (: Formular zur Bearbeitung eines Eintrags ausgeben :)
            else
                let $entry := doc("/db/apps/magica-levantina/data/collection.xml")//object[@id = $edit]
                return
               (<h2>Edit entry</h2>,
               <form method="post" action="{$helpers:app-root}/descriptions.html" name="InputForm">
                 <table>
                    <tr>
                        <td class="label">ID:</td>
                        <td><input name="id" type="text" value="{$edit}" readonly="readonly" /></td>
                    </tr>
                    <tr>
                        <td class="label">Collection:</td>
                        <td><input name="collection" type="text" value="{$entry/collection/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td class="label">Catalogue / Accession number:</td>
                        <td><input name="catalogue-no" type="text" value="{$entry/catNumber/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td class="label">Object type:</td>
                        <td><input name="object-type" type="text" value="{$entry/objectType/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td class="label">Material:</td>
                        <td><input name="material" type="text" value="{$entry/material/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td class="label">Dimensions (cm):</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><span class="label sub">Width:</span></td>
                        <td><input name="dim-width" type="text" value="{$entry/dimensions/width/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td class="label sub">Height:</td>
                        <td><input name="dim-height" type="text" value="{$entry/dimensions/height/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td><span class="label sub">Depth:</span></td>
                        <td><input name="dim-depth" type="text" value="{$entry/dimensions/depth/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td class="label">RTI capture:</td>
                        <td><input name="rti-capture" type="radio" value="yes" />{if ($entry/rtiCapture = "yes") then attribute checked {"checked"} else ()} yes 
                        <input name="rti-capture" type="radio" value="no" style="margin-left: 2em;" />{if ($entry/rtiCapture = "no") then attribute checked {"checked"} else ()} no
                        <input name="rti-capture" type="radio" value="n/a" style="margin-left: 2em;" />{if ($entry/rtiCapture = "n/a") then attribute checked {"checked"} else ()} n/a</td>
                    </tr>
                    <tr>
                        <td class="label">RTI processing:</td>
                        <td><input name="rti-processing" type="radio" value="yes" />{if ($entry/rtiProcessing = "yes") then attribute checked {"checked"} else ()} yes 
                        <input name="rti-processing" type="radio" value="no" style="margin-left: 2em;" />{if ($entry/rtiProcessing = "no") then attribute checked {"checked"} else ()} no
                        <input name="rti-processing" type="radio" value="n/a" style="margin-left: 2em;" />{if ($entry/rtiCapture = "n/a") then attribute checked {"checked"} else ()} n/a</td>
                    </tr>
                    <tr>
                        <td><span class="label">Publication Status:</span></td>
                        <td><input name="publication-status" type="checkbox" value="published">{if ($entry/publicationStatus = "published") then attribute checked {"checked"} else()}</input></td>
                    </tr>
                    <tr>
                        <td><span class="label">Comment:</span></td>
                        <td><input name="comment" type="text" value="{$entry/comment/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td><span class="label">Bibliography:</span></td>
                        <td><input name="bibliography" type="text" value="{$entry/bibliography/data(.)}" /></td>
                    </tr>
                    <tr>
                        <td class="label">Files:</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><span class="label sub">PTM:</span></td>
                        <td>
                            <select name="files-ptm">
                                <option></option>
                                {for $file in system:as-user($config:admin-id, $config:admin-pass, file:directory-list(concat($helpers:file-path, "/x_ptm_rti"), "*.ptm"))//file:file
                                 let $name := $file/data(@name)
                                 return <option>{(if ($entry/files/ptm/normalize-space(.) = $name) then attribute selected {"selected"} else (), $name)}</option>
                                }
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td><span class="label sub">RTI:</span></td>
                        <td>
                            <select name="files-rti">
                                <option></option>
                                {for $file in system:as-user($config:admin-id, $config:admin-pass, file:directory-list(concat($helpers:file-path, "/x_ptm_rti"), "*.rti"))//file:file
                                 let $name := $file/data(@name)
                                 return <option>{(if ($entry/files/rti/normalize-space(.) = $name) then attribute selected {"selected"} else (), $name)}</option>
                                }
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td><span class="label sub">Foto:</span></td>
                        <td>
                            <select name="files-foto">
                                <option></option>
                                {for $file in system:as-user($config:admin-id, $config:admin-pass, file:directory-list(concat($helpers:file-path, "/x_fotos"), "*"))//file:file
                                 let $name := $file/data(@name)
                                 return <option>{(if ($entry/files/foto/normalize-space(.) = $name) then attribute selected {"selected"} else (), $name)}</option>
                                }
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td><input type="hidden" name="form-type" value="object-metadata"/>
                        <input type="hidden" name="edit" value="{$edit}" />
                        <input type="submit" value="Save" style="float: right;" class="btn" />
                        <a style="float: right; margin-right: 10px; display: inline-block;" class="btn" href="{$helpers:request-path}">Cancel</a>
                        </td>
                    </tr>
                 </table>
             </form>)
    else if (exists($del))
         then app:delete($node, $model, $del)
    else ()
 else ()
};

declare function app:menu($node as node(), $model as map(*)){
    if (auth:logged-in())
    then <ul class="nav navbar-nav">
            <li>
                <a href="{$helpers:app-root}/descriptions.html">Object descriptions</a>
            </li>
        </ul>
    else ()
};

(: presentation of the object metadata (may be filtered) :)
declare function app:object-list($node as node(), $model as map(*)){
if (auth:logged-in())
then
    <table class="object-table">
        <tr>
            <th id="ID">ID</th>
            <th>Collection</th>
            <th>Catalogue / Accession number</th>
            <th>Object type</th>
            <th>Material</th>
            <th id="Dimensions">Dimensions (cm)</th>
            <th>RTI capture</th>
            <th>RTI processing</th>
            <th>Publication Status</th>
            <th id="Comment">Comment</th>
            <th>Bibliography</th>
            <th>Files</th>
            <th></th>
        </tr>
        {if (request:get-parameter("form-type", ()) = "object-filter")
        then 
            let $collection := request:get-parameter("collection", ())
            let $catalogue-no := request:get-parameter("catalogue-no", ())
            let $object-type := request:get-parameter("object-type", ())
            let $material := request:get-parameter("material", ())
            let $rti-capture := request:get-parameter("rti-capture", ())
            let $rti-processing := request:get-parameter("rti-processing", ())
            let $publication-status := request:get-parameter("publication-status", ())
            let $free-search := request:get-parameter("free-search", ())
            let $results := doc("/db/apps/magica-levantina/data/collection.xml")//object[if ($collection) then collection = $collection else true()] 
            [if ($catalogue-no) then catNumber = $catalogue-no else true()][if ($object-type) then objectType = $object-type else true()][if ($material) then material = $material else true()]
            [if ($rti-capture) then rtiCapture = $rti-capture else true()][if ($rti-processing) then rtiProcessing = $rti-processing else true()]
            [if ($publication-status) then publicationStatus = $publication-status else true()][if ($free-search) then ft:query(., $free-search) else true()]
            let $hitsNo := count($results)
            return if ($hitsNo gt 0)
                    then (<span class="successful">{$hitsNo} hit{if ($hitsNo != 1) then "s" else ()}</span>, app:present($node, $model, $results))
                    else <span class="error">No hits.</span>
        else 
         app:present($node, $model, doc("/db/apps/magica-levantina/data/collection.xml")//object)
        }
    </table>
 else <span class="error">Please log in to view the object list.</span>
};

(: presentation of one object description entry in a table row :)
declare function app:present($node as node(), $model as map(*), $objects as node()*){
    for $obj in $objects
        return
            <tr>
                <td class="id">{$obj/@id/data(.)}</td>
                <td>{$obj/collection/data(.)}</td>
                <td>{$obj/catNumber/data(.)}</td>
                <td>{$obj/objectType/data(.)}</td>
                <td>{$obj/material/data(.)}</td>
                <td>
                    <table>
                        <tr>
                            <th>Width: </th>
                            <td>{$obj//width/data(.)}</td>
                        </tr>
                        <tr>
                            <th>Height: </th>
                            <td>{$obj//height/data(.)}</td>
                        </tr>
                        <tr>
                            <th>Depth: </th>
                            <td>{$obj//depth/data(.)}</td>
                        </tr>
                    </table>
                </td>
                <td>{$obj/rtiCapture/data(.)}</td>
                <td>{$obj/rtiProcessing/data(.)}</td>
                <td>{$obj/publicationStatus/data(.)}</td>
                <td>{$obj/comment/data(.)}</td>
                <td>{$obj/bibliography/data(.)}</td>
                <td>
                    <table>
                        <tr>
                            <th>PTM:</th>
                            <td>{if ($obj/files/ptm/data(.) != "") then <a href="{concat($helpers:webfile-path, "x_ptm_rti/", $obj/files/ptm/data(.))}">{$obj/files/ptm/data(.)}</a> else ()}</td>
                        </tr>
                        <tr>
                            <th>RTI:</th>
                            <td>{if ($obj/files/rti/data(.) != "") then <a href="{concat($helpers:webfile-path, "x_ptm_rti/", $obj/files/rti/data(.))}">{$obj/files/rti/data(.)}</a> else ()}</td>
                        </tr>
                        <tr>
                            <th>Foto:</th>
                            <td>{if ($obj/files/foto/data(.) != "") then <a href="{concat($helpers:webfile-path, "x_fotos/", $obj/files/foto/data(.))}">{$obj/files/foto/data(.)}</a> else ()}</td>
                        </tr>
                    </table>
                </td>
                <td><span class="btn" onclick="window.location.search = '?edit={$obj/@id/data(.)}&amp;key=' + Math.random();" style="margin-bottom: 0.5em;">Edit</span><br />
                    <span class="btn" onclick="if (confirm('Do you really want to delete this entry (ID {$obj/@id/data(.)})?') == true){{ window.location.search = '?del={$obj/@id/data(.)}'; }}">Delete</span>
                </td>
            </tr>
};


(: save an edited or new metadata entry :)
declare function app:save($node as node(), $model as map(*), $id as xs:string){
if (auth:logged-in())
then
    (: neuer Eintrag? :)
    let $entry := doc("/db/apps/magica-levantina/data/collection.xml")//object[@id = $id]
    let $collection := request:get-parameter("collection", ())
    let $catalogue-no := request:get-parameter("catalogue-no", ())
    let $object-type := request:get-parameter("object-type", ())
    let $material := request:get-parameter("material", ())
    let $width := request:get-parameter("dim-width", ())
    let $height := request:get-parameter("dim-height", ())
    let $depth := request:get-parameter("dim-depth", ())
    let $rti-capture := request:get-parameter("rti-capture", ())
    let $rti-processing := request:get-parameter("rti-processing", ())
    let $publication-status := request:get-parameter("publication-status", "unpublished")
    let $comment := request:get-parameter("comment", ())
    let $bibliography := request:get-parameter("bibliography", ())
    let $ptm := request:get-parameter("files-ptm", ())
    let $rti := request:get-parameter("files-rti", ())
    let $foto := request:get-parameter("files-foto", ())
    let $newEntry := <object id="{$id}">
                   <collection>{$collection}</collection>
                   <catNumber>{$catalogue-no}</catNumber>
                   <objectType>{$object-type}</objectType>
                   <material>{$material}</material>
                   <dimensions>
                       <width>{$width}</width>
                       <height>{$height}</height>
                       <depth>{$depth}</depth>
                   </dimensions>
                   <rtiCapture>{$rti-capture}</rtiCapture>
                   <rtiProcessing>{$rti-processing}</rtiProcessing>
                   <publicationStatus>{$publication-status}</publicationStatus>
                   <comment>{$comment}</comment>
                   <bibliography>{$bibliography}</bibliography>
                   <files>
                       <ptm>{$ptm}</ptm>
                       <rti>{$rti}</rti>
                       <foto>{$foto}</foto>
                   </files>
               </object>
    return
        if (exists($entry))
        then
          let $store := update replace $entry with $newEntry
          return <span class="successful">The entry has been edited (id {$id}).</span>
        else
          let $store := update insert $newEntry into doc("/db/apps/magica-levantina/data/collection.xml")/collection
          return <span class="successful">The entry has been created (id {$id}).</span>         
 else ()
};


(: delete an object metadata entry :)
declare function app:delete($node as node(), $model as map(*), $id as xs:string){
if (auth:logged-in())
then
    let $entry := doc("/db/apps/magica-levantina/data/collection.xml")//object[@id = $id]
    return
        if (exists($entry))
        then 
            (update delete $entry,
            <span class="successful">The entry (ID: {$id}) has been deleted.</span>)
        else
            <span class="error">The entry was not found.</span>
else ()
};


(: LOGIN form :)
declare function app:login($node as node(), $model as map(*)){
    let $error := session:get-attribute("error")
    return 
    <div class="login">
        {if (auth:logged-in())
         then (<span class="navbar-text">Logged in as: {xmldb:get-current-user()}</span>,
              <a class="btn clear logout" href="{$helpers:app-root}/logout?path={$helpers:request-path}">Logout</a>
              )
         else <span class="btn clear" onclick="document.getElementById('LoginForm').style.display='block';">Login</span>
         }
        <div id="LoginForm" style="display: {if ($error = "login") then "block;" else "none;"}">
            <span class="close" onclick="document.getElementById('LoginForm').style.display='none';"><img src="resources/icons/dialog_close.png" alt="Schließen" /></span>
            <form method="POST" action="{$helpers:app-root}/login">
               {if ($error = "login") 
               then (app:print-error($node, $model, $error), session:remove-attribute("error"))
               else ()}
               User name:<br /><input name="username" type="text" size="30" maxlength="30" /><br />
               Password:<br /><input name="password" type="password" size="30" maxlength="40" /><br /><br />
               <input type="submit" value="Log in" /> <input type="reset" value="Reset" />
               <input type="hidden" name="path" value="{$helpers:request-path}"/>
            </form>
        </div>
    </div>
};

(: Fehlermeldung ausgeben :)
declare function app:print-error($node as node(), $model as map(*), $result) as node(){
        <p class="error">{error:get-message(data($result))}</p>
};

(: Search filter :)
declare function app:filter($node as node(), $model as map(*)){
    let $elementNames := ("collection", "catNumber", "objectType", "material")
    let $selectNames := ("collection", "catalogue-number", "object-type", "material")
    let $labels := ("Collection", "Catalogue / Accession number", "Object type", "Material")
    let $rti-capture := request:get-parameter("rti-capture", ())
    let $rti-processing := request:get-parameter("rti-processing", ())
    let $publication-status := request:get-parameter("publication-status", ())
    let $free-search := request:get-parameter("free-search", ())
    return (
      <script type="text/javascript">
            function resetForm(fo){{
                $('select option').removeAttr('selected');
                $('input[type=radio]').removeAttr('checked');
                $('input[type=text]').removeAttr('value');
            }}
      </script>,
      <form method="POST" class="filter" id="FilterForm">
         {for $el at $pos in $elementNames
          let $options := distinct-values(doc("/db/apps/magica-levantina/data/collection.xml")//object/child::*[local-name()=$el]/data(.))
          let $param := request:get-parameter($selectNames[$pos], ())
          return
            ($labels[$pos], ":", <br />, <select name="{$selectNames[$pos]}">
                {for $opt in $options
                order by $opt
                return <option>{(if ($param and $param = $opt) then attribute selected {"selected"} else (), $opt)}</option>}
            </select>, <br />)
         }
         <br />RTI capture:<br /> 
         <input name="rti-capture" type="radio" value="yes">{if ($rti-capture = "yes") then app:checked() else ()}</input> yes 
         <input name="rti-capture" type="radio" value="no" style="margin-left: 2em;">{if ($rti-capture = "no") then app:checked() else ()}</input> no 
         <input name="rti-capture" type="radio" value="n/a" style="margin-left: 2em;">{if ($rti-capture = "n/a") then app:checked() else ()}</input> n/a<br />
         <br />RTI processing:<br /> 
         <input name="rti-processing" type="radio" value="yes">{if ($rti-processing = "yes") then app:checked() else ()}</input> yes 
         <input name="rti-processing" type="radio" value="no" style="margin-left: 2em;">{if ($rti-processing = "no") then app:checked() else ()}</input> no 
         <input name="rti-processing" type="radio" value="n/a" style="margin-left: 2em;">{if ($rti-processing = "n/a") then app:checked() else ()}</input> n/a<br />
         <br />Publication status:<br /> 
         <input name="publication-status" type="radio" value="published">{if ($publication-status = "published") then app:checked() else ()}</input> published 
         <input name="publication-status" type="radio" value="unpublished" style="margin-left: 2em;">{if ($publication-status = "unpublished") then app:checked() else ()}</input> unpublished<br />
         <br />Free search:<br />
         <input name="free-search" type="text" size="30" maxlength="40">{if ($free-search) then attribute value {$free-search} else ()}</input><br /><br />
         <input type="submit" value="Apply" style="margin-right: " /> <input type="reset" value="Reset" onclick="resetForm(this);" /> <input type="hidden" name="form-type" value="object-filter"/>
      </form>)
};

declare function app:checked(){
    attribute checked {"checked"}
};

declare function app:logos($node as node(), $model as map(*)){
    <div class="logos left-edge">
        <table>
            <tr>
                <td>
                    <a href="http://ifa.phil-fak.uni-koeln.de/" target="_blank"><img src="{$helpers:app-root}/resources/imgs/logo_uni_koeln.png" alt="Logo Uni Köln" width="60" height="auto" /></a>
                </td>
                <td>
                    <a href="http://ifa.phil-fak.uni-koeln.de/" target="_blank">Universität zu Köln<br />
                    Institut für Altertumskunde</a>
                </td>
            </tr>
            <tr>
                <td>
                    <a href="http://www.cceh.uni-koeln.de/" target="_blank"><img src="{$helpers:app-root}/resources/imgs/logo_cceh.png" alt="Logo CCeH" width="60" height="auto" /></a>
                </td>
                <td><a href="http://www.cceh.uni-koeln.de/" target="_blank">Cologne Center for eHumanities</a></td>
            </tr>
        </table>
    </div>
};